package testcases.CWE606_Unchecked_Loop_Condition;

import javax.servlet.http.*;

public class ServletMain extends HttpServlet {

    private static final long serialVersionUID = 1L; /* needed since Servlets are serializable */


    public void doPost(HttpServletRequest request, HttpServletResponse response) {
        doGet(request, response);
    }

    public void doGet(HttpServletRequest request, HttpServletResponse response) {
        doGetCWE1(request, response);
        doGetCWE2(request, response);
        doGetCWE3(request, response);
        doGetCWE4(request, response);
        doGetCWE5(request, response);
        doGetCWE6(request, response);
        doGetCWE7(request, response);
        doGetCWE8(request, response);
        doGetCWE9(request, response);
    }

    private static void doGetCWE1(HttpServletRequest request, HttpServletResponse response) {
        try {
            /* BEGIN-AUTOGENERATED-SERVLET-TESTS-1 */

            /* END-AUTOGENERATED-SERVLET-TESTS-1 */
        } catch (Throwable t) {

            /* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
             * and write to the console (since we can't write to the response without possibly throwing another exception)
             */

            System.out.println(
                    " Caught thowable from doGetCWE1 ");

            System.out.println(" Throwable's message = " + t.getMessage());

            System.out.println("Stack trace below");

            StackTraceElement stes[] = t.getStackTrace();

            for (StackTraceElement ste : stes) {
                System.out.println("  " + ste.toString());
            }
        }
    }

    private static void doGetCWE2(HttpServletRequest request, HttpServletResponse response) {
        try {
            /* BEGIN-AUTOGENERATED-SERVLET-TESTS-2 */

            /* END-AUTOGENERATED-SERVLET-TESTS-2 */
        } catch (Throwable t) {

            /* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
             * and write to the console (since we can't write to the response without possibly throwing another exception)
             */

            System.out.println(
                    " Caught thowable from doGetCWE2 ");

            System.out.println(" Throwable's message = " + t.getMessage());

            System.out.println("Stack trace below");

            StackTraceElement stes[] = t.getStackTrace();

            for (StackTraceElement ste : stes) {
                System.out.println("  " + ste.toString());
            }
        }
    }

    private static void doGetCWE3(HttpServletRequest request, HttpServletResponse response) {
        try {
            /* BEGIN-AUTOGENERATED-SERVLET-TESTS-3 */

            /* END-AUTOGENERATED-SERVLET-TESTS-3 */
        } catch (Throwable t) {

            /* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
             * and write to the console (since we can't write to the response without possibly throwing another exception)
             */

            System.out.println(
                    " Caught thowable from doGetCWE3 ");

            System.out.println(" Throwable's message = " + t.getMessage());

            System.out.println("Stack trace below");

            StackTraceElement stes[] = t.getStackTrace();

            for (StackTraceElement ste : stes) {
                System.out.println("  " + ste.toString());
            }
        }
    }

    private static void doGetCWE4(HttpServletRequest request, HttpServletResponse response) {
        try {
            /* BEGIN-AUTOGENERATED-SERVLET-TESTS-4 */

            /* END-AUTOGENERATED-SERVLET-TESTS-4 */
        } catch (Throwable t) {

            /* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
             * and write to the console (since we can't write to the response without possibly throwing another exception)
             */

            System.out.println(
                    " Caught thowable from doGetCWE4 ");

            System.out.println(" Throwable's message = " + t.getMessage());

            System.out.println("Stack trace below");

            StackTraceElement stes[] = t.getStackTrace();

            for (StackTraceElement ste : stes) {
                System.out.println("  " + ste.toString());
            }
        }
    }

    private static void doGetCWE5(HttpServletRequest request, HttpServletResponse response) {
        try {
            /* BEGIN-AUTOGENERATED-SERVLET-TESTS-5 */

            /* END-AUTOGENERATED-SERVLET-TESTS-5 */
        } catch (Throwable t) {

            /* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
             * and write to the console (since we can't write to the response without possibly throwing another exception)
             */

            System.out.println(
                    " Caught thowable from doGetCWE5 ");

            System.out.println(" Throwable's message = " + t.getMessage());

            System.out.println("Stack trace below");

            StackTraceElement stes[] = t.getStackTrace();

            for (StackTraceElement ste : stes) {

                System.out.println("  " + ste.toString());
            }
        }
    }

    private static void doGetCWE6(HttpServletRequest request, HttpServletResponse response) {
        try {
            /* BEGIN-AUTOGENERATED-SERVLET-TESTS-6 */
            (new testcases.CWE606_Unchecked_Loop_Condition.J20241()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20240()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20137()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20136()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20211()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20210()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20127()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20126()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20187()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20186()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20205()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20204()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20223()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20222()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20225()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20224()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20123()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20122()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20135()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20134()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20203()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20202()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20153()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20152()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20191()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20190()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20209()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20208()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20147()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20146()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20227()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20226()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20195()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20194()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20115()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20114()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20233()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20232()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20171()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20170()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20179()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20178()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20219()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20218()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20121()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20120()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20119()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20118()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20169()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20168()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20189()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20188()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20243()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20242()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20245()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20244()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20185()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20184()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20173()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20172()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20201()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20200()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20145()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20144()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20231()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20230()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20213()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20212()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20165()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20164()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20125()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20124()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20197()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20196()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20133()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20132()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20183()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20182()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20229()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20228()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20221()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20220()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20141()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20140()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20217()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20216()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20151()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20150()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20215()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20214()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20157()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20156()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20175()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20174()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20129()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20128()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20149()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20148()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20193()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20192()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20239()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20238()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20155()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20154()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20237()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20236()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20199()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20198()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20117()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20116()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20167()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20166()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20177()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20176()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20143()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20142()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20131()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20130()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20207()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20206()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20181()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20180()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20139()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20138()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20161()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20160()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20235()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20234()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20159()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20158()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20163()).runTest(request, response);
            (new testcases.CWE606_Unchecked_Loop_Condition.J20162()).runTest(request, response);
            /* END-AUTOGENERATED-SERVLET-TESTS-6 */
        } catch (Throwable t) {

            /* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
             * and write to the console (since we can't write to the response without possibly throwing another exception)
             */

            System.out.println(
                    " Caught thowable from doGetCWE6 ");

            System.out.println(" Throwable's message = " + t.getMessage());

            System.out.println("Stack trace below");

            StackTraceElement stes[] = t.getStackTrace();

            for (StackTraceElement ste : stes) {
                System.out.println("  " + ste.toString());
            }
        }
    }

    private static void doGetCWE7(HttpServletRequest request, HttpServletResponse response) {
        try {
            /* BEGIN-AUTOGENERATED-SERVLET-TESTS-7 */

            /* END-AUTOGENERATED-SERVLET-TESTS-7 */
        } catch (Throwable t) {

            /* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
             * and write to the console (since we can't write to the response without possibly throwing another exception)
             */

            System.out.println(
                    " Caught thowable from doGetCWE7 ");

            System.out.println(" Throwable's message = " + t.getMessage());

            System.out.println("Stack trace below");

            StackTraceElement stes[] = t.getStackTrace();

            for (StackTraceElement ste : stes) {
                System.out.println("  " + ste.toString());
            }
        }
    }

    private static void doGetCWE8(HttpServletRequest request, HttpServletResponse response) {
        try {
            /* BEGIN-AUTOGENERATED-SERVLET-TESTS-8 */

            /* END-AUTOGENERATED-SERVLET-TESTS-8 */
        } catch (Throwable t) {

            /* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
             * and write to the console (since we can't write to the response without possibly throwing another exception)
             */

            System.out.println(
                    " Caught thowable from doGetCWE8 ");

            System.out.println(" Throwable's message = " + t.getMessage());

            System.out.println("Stack trace below");

            StackTraceElement stes[] = t.getStackTrace();

            for (StackTraceElement ste : stes) {
                System.out.println("  " + ste.toString());
            }
        }
    }

    private static void doGetCWE9(HttpServletRequest request, HttpServletResponse response) {
        try {
            /* BEGIN-AUTOGENERATED-SERVLET-TESTS-9 */

            /* END-AUTOGENERATED-SERVLET-TESTS-9 */
        } catch (Throwable t) {

            /* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
             * and write to the console (since we can't write to the response without possibly throwing another exception)
             */

            System.out.println(
                    " Caught thowable from doGetCWE9 ");

            System.out.println(" Throwable's message = " + t.getMessage());

            System.out.println("Stack trace below");

            StackTraceElement stes[] = t.getStackTrace();

            for (StackTraceElement ste : stes) {
                System.out.println("  " + ste.toString());
            }
        }
    }
}

